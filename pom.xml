<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.louis</groupId>
	<artifactId>springboot-study</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules>
		<!-- 第一章：Spring Boot入门包括基础配置 -->
		<!--Spring Boot入门：HelloWorld -->
		<module>chapter01-01-helloworld</module>
		<!--Spring Boot基础配置：Properties配置 -->
		<module>chapter01-02-properties</module>
		<!--Spring Boot基础配置：YAML配置 -->
		<module>chapter01-03-yaml</module>
		<!--Spring Boot整合Lombok -->
		<module>chapter01-04-lombok</module>
		<!--Spring Boot使用Junit单元测试 -->
		<module>chapter01-05-test-junit</module>

		<!-- 第二章：Spring Boot整合模版引擎和WEB开发 -->
		<!--Spring Boot整合模版引擎：Thymeleaf -->
		<module>chapter02-01-thymeleaf</module>
		<!--Spring Boot整合模版引擎：FreeMarker -->
		<module>chapter02-02-freemarker</module>
		<!--Spring Boot整合Swagger2构建RESTful API -->
		<module>chapter02-03-swagger2-restful</module>
		<!--Spring Boot整合文件上传 -->
		<module>chapter02-03-web-upload</module>
		<!--Spring Boot整合全局异常处理 -->
		<module>chapter02-04-global-exception-handle</module>

		<!-- 第三章：Spring Boot连接sql数据库资源整合数据库插件 -->
		<!--Spring Boot整合JPA快速入门 -->
		<module>chapter03-01-jpa</module>
		<!--Spring Boot整合Mybatis -->
		<module>chapter03-02-mybatis</module>
		<!--Spring Boot整合Mybatis Annotation 注解案例 -->
		<module>chapter03-02-mybatis-annotation</module>
		<!--Spring Boot使用Druid数据库连接池 -->
		<module>chapter03-03-druid</module>
		<!--Spring Boot+Mybatis配置PaheHelper分页插件 -->
		<module>chapter03-04-pagehelper</module>
		<!--Spring Boot整合Mybatis-Plus：基于RESTful风格 -->
		<module>chapter03-05-mybatis-plus</module>
		<!--Spring Boot 整合 Mybatis 实现 Druid 多数据源配置 -->
		<module>chapter03-06-mybatis-multidatasource</module>

		<!-- 第四章：Spring Boot整合NoSQL数据缓存 -->
		<!-- Spring Boot 整合 Redis 实现缓存操作 -->
		<module>chapter04-01-redis</module>
		<!-- Spring Boot 整合 Redis Annotation 实现缓存操作 -->
		<module>chapter04-01-redis-annotation</module>
		<!-- Spring Boot 整合 MongoDB 实现缓存操作 -->
		<module>chapter04-02-mongodb</module>
		<!-- Spring Boot 整合 EhCache 实现缓存操作 -->
		<module>chapter04-03-cache-ehcache</module>
	</modules>

	<properties>
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<!-- Spring Boot 启动父依赖 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
	</parent>

	<dependencyManagement>
		<dependencies>
			<!-- spring-boot-starter：核心模块，包括自动配置支持、日志和YAML -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>2.1.0.RELEASE</version>
			</dependency>
			<!-- Spring Boot Test 依赖：测试模块，包括JUnit、Hamcrest、Mockito -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>2.1.0.RELEASE</version>
				<scope>test</scope>
			</dependency>
			<!-- Junit -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<!-- Spring Boot Web 依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>2.1.0.RELEASE</version>
			</dependency>
			<!-- spring-boot实现热部署 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<version>2.1.0.RELEASE</version>
				<optional>true</optional>
			</dependency>
			<!-- 数据源配置 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>2.1.0.RELEASE</version>
			</dependency>
			<!-- Spring Boot Mybatis 依赖 -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>2.0.0</version>
			</dependency>
			<!-- MySQL 连接驱动依赖 -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>8.0.11</version>
				<scope>runtime</scope>
			</dependency>
			<!-- druid依赖 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>1.1.10</version>
			</dependency>
			<!-- lombok依赖 -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.6</version>
				<optional>true</optional>
			</dependency>
			<!-- Spring Boot Redis 依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis</artifactId>
				<version>2.1.0.RELEASE</version>
			</dependency>
			<!-- Spring Boot MongoDB 依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-mongodb</artifactId>
				<version>2.1.0.RELEASE</version>
			</dependency>
			<!-- Spring Boot cache 依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-cache</artifactId>
				<version>2.1.0.RELEASE</version>
			</dependency>
			<!-- Ehcache -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>2.10.4</version>
			</dependency>
		</dependencies>

	</dependencyManagement>


	<!--springboot的maven插件 -->
	<!--以maven的形式为应用springboot支持 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- 该插件的主要功能是进行项目的打包发布处理 -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--开启热部署 -->
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>